name: Build SuperProtocol OS image
on:
  workflow_call:
  workflow_dispatch:
    inputs:
      runs-on:
        required: true
        type: choice
        description: github runner for build
        options:
        - self-hosted
        - sp-vm-runner-2
        - ubuntu-latest

jobs:
  build-asset:
    runs-on: ${{ inputs.runs-on }}
    env:
      S3_BUCKET: "builds-vm"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set SP_VM_IMAGE_VERSION variable
        run: echo "SP_VM_IMAGE_VERSION=build-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Setup builder
        run: |
          if docker buildx inspect insecure-builder >/dev/null 2>&1; then
              echo "Builder is already created";
              exit 0;
          fi
          sudo docker buildx create \
              --use \
              --name insecure-builder \
              --buildkitd-flags '--allow-insecure-entitlement security.insecure';

      - name: Build sp-vm image
        run: |
          sudo docker buildx build \
              -t sp-vm \
              --allow security.insecure \
              src \
              --output type=local,dest=./out \
              --build-arg "SP_VM_IMAGE_VERSION=$SP_VM_IMAGE_VERSION" \
              --build-arg "S3_BUCKET=$S3_BUCKET";

      - name: Upload files to Storj
        working-directory: out
        run: |
          function upload_file() {
              local FILE="${1:=""}";
              if [[ -z "$FILE" ]] || [[ ! -f "$FILE" ]]; then
                  echo "File $FILE not found";
                  exit 1;
              fi
              echo "Uploading $file to ${S3_BUCKET}/${SP_VM_IMAGE_VERSION}/"
              rclone copy \
                  --multi-thread-streams 8 \
                  --s3-provider Storj \
                  --s3-endpoint=gateway.storjshare.io \
                  "--s3-access-key-id=${{ secrets.S3_ACCESS_KEY }}" \
                  "--s3-secret-access-key=${{ secrets.S3_SECRET_KEY }}" \
                  "$FILE" \
                  ":s3:${S3_BUCKET}/${SP_VM_IMAGE_VERSION}/";
          }
          upload_file "sp-vm-${SP_VM_IMAGE_VERSION}.img";
          upload_file "OVMF.fd";
          upload_file "OVMF_AMD.fd";
          upload_file "vm.json";

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.SP_VM_IMAGE_VERSION }}
          release_name: Release ${{ env.SP_VM_IMAGE_VERSION }}
          draft: false
          prerelease: true
          files: |
            out/vm.json
