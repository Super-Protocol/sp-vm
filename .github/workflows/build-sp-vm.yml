name: Build SuperProtocol OS image
on:
  workflow_call:
  workflow_dispatch:
    inputs:
      target-branch:
        required: true
        type: string
        description: sp-kata-containers branch
        default: "sp-main"
      runs-on:
        required: true
        type: choice
        description: github runner for build
        options:
        - sp-vm-runner
        - sp-vm-runner-2
        - ubuntu-latest

jobs:
  build-asset:
    runs-on: ${{ inputs.runs-on }}
    env:
      S3_BUCKET: "builds-vm"
      UPLOAD_FILES: "rootfs.img OVMF.fd OVMF_AMD.fd root_hash.txt vmlinuz"
      SP_CA_CRT: "${{ vars.SP_CA_CRT }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set TAG variable
        run: echo "TAG=build-${{ github.run_number }}" >> $GITHUB_ENV

      - name: Build
        run: |
          sudo apt-get update
          sudo apt-get -y install curl
          sudo -E bash \
              ./build.sh \
              --checkout-to "${{ inputs.target-branch }}" \
              --upload-s3-bucket "$UPLOAD_S3_BUCKET" \
              --upload-release-tag "$TAG" \
              --upload-files "$UPLOAD_FILES";

      - name: Upload files to Storj
        working-directory: kata-containers/build
        run: |
         for file in ${UPLOAD_FILES}; do
           if [ -f "$file" ]; then
             echo "Uploading $file to ${S3_BUCKET}/${TAG}/"
             rclone copy \
               --multi-thread-streams 8 \
               --s3-provider Storj \
               --s3-access-key-id=${{ secrets.S3_ACCESS_KEY }} \
               --s3-secret-access-key=${{ secrets.S3_SECRET_KEY }} \
               --s3-endpoint=gateway.storjshare.io \
               "$file" \
               ":s3:${S3_BUCKET}/${TAG}/"
           else
             echo "File ${file} not found"
             exit 1
           fi
         done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: true
          files: |
            sp-kata-containers/build/vm.json
